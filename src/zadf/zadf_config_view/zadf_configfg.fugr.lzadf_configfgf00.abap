*---------------------------------------------------------------------*
*    view related FORM routines
*   generation date: 01/16/2023 at 21:47:10
*   view maintenance generator version: #001407#
*---------------------------------------------------------------------*
*...processing: ZADF_V_CONFIG...................................*
FORM GET_DATA_ZADF_V_CONFIG.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM ZADF_CONFIG WHERE
(VIM_WHERETAB) .
    CLEAR ZADF_V_CONFIG .
ZADF_V_CONFIG-MANDT =
ZADF_CONFIG-MANDT .
ZADF_V_CONFIG-INTERFACE_ID =
ZADF_CONFIG-INTERFACE_ID .
ZADF_V_CONFIG-INTERFACE_TYPE =
ZADF_CONFIG-INTERFACE_TYPE .
ZADF_V_CONFIG-SAS_KEY =
ZADF_CONFIG-SAS_KEY .
ZADF_V_CONFIG-URI =
ZADF_CONFIG-URI .
ZADF_V_CONFIG-SERVICE_TYPE =
ZADF_CONFIG-SERVICE_TYPE .
<VIM_TOTAL_STRUC> = ZADF_V_CONFIG.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_ZADF_V_CONFIG .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO ZADF_V_CONFIG.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_ZADF_V_CONFIG-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM ZADF_CONFIG WHERE
  INTERFACE_ID = ZADF_V_CONFIG-INTERFACE_ID .
    IF SY-SUBRC = 0.
    DELETE ZADF_CONFIG .
    ENDIF.
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM ZADF_CONFIG WHERE
  INTERFACE_ID = ZADF_V_CONFIG-INTERFACE_ID .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR ZADF_CONFIG.
    ENDIF.
ZADF_CONFIG-MANDT =
ZADF_V_CONFIG-MANDT .
ZADF_CONFIG-INTERFACE_ID =
ZADF_V_CONFIG-INTERFACE_ID .
ZADF_CONFIG-INTERFACE_TYPE =
ZADF_V_CONFIG-INTERFACE_TYPE .
ZADF_CONFIG-SAS_KEY =
ZADF_V_CONFIG-SAS_KEY .
ZADF_CONFIG-URI =
ZADF_V_CONFIG-URI .
ZADF_CONFIG-SERVICE_TYPE =
ZADF_V_CONFIG-SERVICE_TYPE .
    IF SY-SUBRC = 0.
    UPDATE ZADF_CONFIG ##WARN_OK.
    ELSE.
    INSERT ZADF_CONFIG .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_ZADF_V_CONFIG-UPD_FLAG,
STATUS_ZADF_V_CONFIG-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_ZADF_V_CONFIG.
  SELECT SINGLE * FROM ZADF_CONFIG WHERE
INTERFACE_ID = ZADF_V_CONFIG-INTERFACE_ID .
ZADF_V_CONFIG-MANDT =
ZADF_CONFIG-MANDT .
ZADF_V_CONFIG-INTERFACE_ID =
ZADF_CONFIG-INTERFACE_ID .
ZADF_V_CONFIG-INTERFACE_TYPE =
ZADF_CONFIG-INTERFACE_TYPE .
ZADF_V_CONFIG-SAS_KEY =
ZADF_CONFIG-SAS_KEY .
ZADF_V_CONFIG-URI =
ZADF_CONFIG-URI .
ZADF_V_CONFIG-SERVICE_TYPE =
ZADF_CONFIG-SERVICE_TYPE .
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_ZADF_V_CONFIG USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE ZADF_V_CONFIG-INTERFACE_ID TO
ZADF_CONFIG-INTERFACE_ID .
MOVE ZADF_V_CONFIG-MANDT TO
ZADF_CONFIG-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZADF_CONFIG'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZADF_CONFIG TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZADF_CONFIG'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
*...processing: ZADF_V_RESTDEST.................................*
FORM GET_DATA_ZADF_V_RESTDEST.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM ZREST_CONFIG WHERE
(VIM_WHERETAB) .
    CLEAR ZADF_V_RESTDEST .
ZADF_V_RESTDEST-MANDT =
ZREST_CONFIG-MANDT .
ZADF_V_RESTDEST-INTERFACE_ID =
ZREST_CONFIG-INTERFACE_ID .
ZADF_V_RESTDEST-DESTINATION =
ZREST_CONFIG-DESTINATION .
ZADF_V_RESTDEST-SENSITIVE_FLAG =
ZREST_CONFIG-SENSITIVE_FLAG .
ZADF_V_RESTDEST-SENSITIVE_GROUP =
ZREST_CONFIG-SENSITIVE_GROUP .
<VIM_TOTAL_STRUC> = ZADF_V_RESTDEST.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_ZADF_V_RESTDEST .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO ZADF_V_RESTDEST.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_ZADF_V_RESTDEST-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM ZREST_CONFIG WHERE
  INTERFACE_ID = ZADF_V_RESTDEST-INTERFACE_ID .
    IF SY-SUBRC = 0.
    DELETE ZREST_CONFIG .
    ENDIF.
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM ZREST_CONFIG WHERE
  INTERFACE_ID = ZADF_V_RESTDEST-INTERFACE_ID .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR ZREST_CONFIG.
    ENDIF.
ZREST_CONFIG-MANDT =
ZADF_V_RESTDEST-MANDT .
ZREST_CONFIG-INTERFACE_ID =
ZADF_V_RESTDEST-INTERFACE_ID .
ZREST_CONFIG-DESTINATION =
ZADF_V_RESTDEST-DESTINATION .
ZREST_CONFIG-SENSITIVE_FLAG =
ZADF_V_RESTDEST-SENSITIVE_FLAG .
ZREST_CONFIG-SENSITIVE_GROUP =
ZADF_V_RESTDEST-SENSITIVE_GROUP .
    IF SY-SUBRC = 0.
    UPDATE ZREST_CONFIG ##WARN_OK.
    ELSE.
    INSERT ZREST_CONFIG .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_ZADF_V_RESTDEST-UPD_FLAG,
STATUS_ZADF_V_RESTDEST-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_ZADF_V_RESTDEST.
  SELECT SINGLE * FROM ZREST_CONFIG WHERE
INTERFACE_ID = ZADF_V_RESTDEST-INTERFACE_ID .
ZADF_V_RESTDEST-MANDT =
ZREST_CONFIG-MANDT .
ZADF_V_RESTDEST-INTERFACE_ID =
ZREST_CONFIG-INTERFACE_ID .
ZADF_V_RESTDEST-DESTINATION =
ZREST_CONFIG-DESTINATION .
ZADF_V_RESTDEST-SENSITIVE_FLAG =
ZREST_CONFIG-SENSITIVE_FLAG .
ZADF_V_RESTDEST-SENSITIVE_GROUP =
ZREST_CONFIG-SENSITIVE_GROUP .
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_ZADF_V_RESTDEST USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE ZADF_V_RESTDEST-INTERFACE_ID TO
ZREST_CONFIG-INTERFACE_ID .
MOVE ZADF_V_RESTDEST-MANDT TO
ZREST_CONFIG-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZREST_CONFIG'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZREST_CONFIG TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZREST_CONFIG'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
